//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

namespace ShowPlanParser
{ // 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [XmlRoot(ElementName = "ShowPlanXML", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", IsNullable=false)]
    public partial class ShowPlan {
    
        private StmtBlockType[][] batchSequenceField;
    
        private string versionField;
    
        private string buildField;
    
        /// <remarks/>
        [XmlArrayItem("Batch", IsNullable=false)]
        [XmlArrayItem("Statements", IsNullable=false, NestingLevel=1)]
        public StmtBlockType[][] BatchSequence {
            get {
                return this.batchSequenceField;
            }
            set {
                this.batchSequenceField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtBlockType {
    
        private BaseStmtInfoType[] itemsField;
    
        /// <remarks/>
        [XmlElement("StmtCond", typeof(StmtCondType))]
        [XmlElement("StmtCursor", typeof(StmtCursorType))]
        [XmlElement("StmtReceive", typeof(StmtReceiveType))]
        [XmlElement("StmtSimple", typeof(StmtSimpleType))]
        [XmlElement("StmtUseDb", typeof(StmtUseDbType))]
        public BaseStmtInfoType[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondType : BaseStmtInfoType {
    
        private StmtCondTypeCondition conditionField;
    
        private StmtCondTypeThen thenField;
    
        private StmtCondTypeElse elseField;
    
        /// <remarks/>
        public StmtCondTypeCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
    
        /// <remarks/>
        public StmtCondTypeThen Then {
            get {
                return this.thenField;
            }
            set {
                this.thenField = value;
            }
        }
    
        /// <remarks/>
        public StmtCondTypeElse Else {
            get {
                return this.elseField;
            }
            set {
                this.elseField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondTypeCondition {
    
        private QueryPlanType queryPlanField;
    
        private FunctionType[] uDFField;
    
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("UDF")]
        public FunctionType[] UDF {
            get {
                return this.uDFField;
            }
            set {
                this.uDFField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class QueryPlanType {
    
        private InternalInfoType internalInfoField;
    
        private ThreadStatType threadStatField;
    
        private MissingIndexGroupType[] missingIndexesField;
    
        private GuessedSelectivityType guessedSelectivityField;
    
        private UnmatchedIndexesType unmatchedIndexesField;
    
        private WarningsType warningsField;
    
        private MemoryGrantType memoryGrantInfoField;
    
        private OptimizerHardwareDependentPropertiesType optimizerHardwareDependentPropertiesField;
    
        private RelOpType relOpField;
    
        private ColumnReferenceType[] parameterListField;
    
        private int degreeOfParallelismField;
    
        private bool degreeOfParallelismFieldSpecified;
    
        private string nonParallelPlanReasonField;
    
        private ulong memoryGrantField;
    
        private bool memoryGrantFieldSpecified;
    
        private ulong cachedPlanSizeField;
    
        private bool cachedPlanSizeFieldSpecified;
    
        private ulong compileTimeField;
    
        private bool compileTimeFieldSpecified;
    
        private ulong compileCPUField;
    
        private bool compileCPUFieldSpecified;
    
        private ulong compileMemoryField;
    
        private bool compileMemoryFieldSpecified;
    
        private bool usePlanField;
    
        private bool usePlanFieldSpecified;
    
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
    
        /// <remarks/>
        public ThreadStatType ThreadStat {
            get {
                return this.threadStatField;
            }
            set {
                this.threadStatField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("MissingIndexGroup", IsNullable=false)]
        public MissingIndexGroupType[] MissingIndexes {
            get {
                return this.missingIndexesField;
            }
            set {
                this.missingIndexesField = value;
            }
        }
    
        /// <remarks/>
        public GuessedSelectivityType GuessedSelectivity {
            get {
                return this.guessedSelectivityField;
            }
            set {
                this.guessedSelectivityField = value;
            }
        }
    
        /// <remarks/>
        public UnmatchedIndexesType UnmatchedIndexes {
            get {
                return this.unmatchedIndexesField;
            }
            set {
                this.unmatchedIndexesField = value;
            }
        }
    
        /// <remarks/>
        public WarningsType Warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
    
        /// <remarks/>
        public MemoryGrantType MemoryGrantInfo {
            get {
                return this.memoryGrantInfoField;
            }
            set {
                this.memoryGrantInfoField = value;
            }
        }
    
        /// <remarks/>
        public OptimizerHardwareDependentPropertiesType OptimizerHardwareDependentProperties {
            get {
                return this.optimizerHardwareDependentPropertiesField;
            }
            set {
                this.optimizerHardwareDependentPropertiesField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] ParameterList {
            get {
                return this.parameterListField;
            }
            set {
                this.parameterListField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int DegreeOfParallelism {
            get {
                return this.degreeOfParallelismField;
            }
            set {
                this.degreeOfParallelismField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool DegreeOfParallelismSpecified {
            get {
                return this.degreeOfParallelismFieldSpecified;
            }
            set {
                this.degreeOfParallelismFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string NonParallelPlanReason {
            get {
                return this.nonParallelPlanReasonField;
            }
            set {
                this.nonParallelPlanReasonField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong MemoryGrant {
            get {
                return this.memoryGrantField;
            }
            set {
                this.memoryGrantField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool MemoryGrantSpecified {
            get {
                return this.memoryGrantFieldSpecified;
            }
            set {
                this.memoryGrantFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong CachedPlanSize {
            get {
                return this.cachedPlanSizeField;
            }
            set {
                this.cachedPlanSizeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CachedPlanSizeSpecified {
            get {
                return this.cachedPlanSizeFieldSpecified;
            }
            set {
                this.cachedPlanSizeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong CompileTime {
            get {
                return this.compileTimeField;
            }
            set {
                this.compileTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CompileTimeSpecified {
            get {
                return this.compileTimeFieldSpecified;
            }
            set {
                this.compileTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong CompileCPU {
            get {
                return this.compileCPUField;
            }
            set {
                this.compileCPUField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CompileCPUSpecified {
            get {
                return this.compileCPUFieldSpecified;
            }
            set {
                this.compileCPUFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong CompileMemory {
            get {
                return this.compileMemoryField;
            }
            set {
                this.compileMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CompileMemorySpecified {
            get {
                return this.compileMemoryFieldSpecified;
            }
            set {
                this.compileMemoryFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool UsePlan {
            get {
                return this.usePlanField;
            }
            set {
                this.usePlanField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool UsePlanSpecified {
            get {
                return this.usePlanFieldSpecified;
            }
            set {
                this.usePlanFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class InternalInfoType {
    
        private System.Xml.XmlElement[] anyField;
    
        private System.Xml.XmlAttribute[] anyAttrField;
    
        /// <remarks/>
        [XmlAnyElement()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    
        /// <remarks/>
        [XmlAnyAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CursorPlanType {
    
        private CursorPlanTypeOperation[] operationField;
    
        private string cursorNameField;
    
        private CursorType cursorActualTypeField;
    
        private bool cursorActualTypeFieldSpecified;
    
        private CursorType cursorRequestedTypeField;
    
        private bool cursorRequestedTypeFieldSpecified;
    
        private CursorPlanTypeCursorConcurrency cursorConcurrencyField;
    
        private bool cursorConcurrencyFieldSpecified;
    
        private bool forwardOnlyField;
    
        private bool forwardOnlyFieldSpecified;
    
        /// <remarks/>
        [XmlElement("Operation")]
        public CursorPlanTypeOperation[] Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string CursorName {
            get {
                return this.cursorNameField;
            }
            set {
                this.cursorNameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public CursorType CursorActualType {
            get {
                return this.cursorActualTypeField;
            }
            set {
                this.cursorActualTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CursorActualTypeSpecified {
            get {
                return this.cursorActualTypeFieldSpecified;
            }
            set {
                this.cursorActualTypeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public CursorType CursorRequestedType {
            get {
                return this.cursorRequestedTypeField;
            }
            set {
                this.cursorRequestedTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CursorRequestedTypeSpecified {
            get {
                return this.cursorRequestedTypeFieldSpecified;
            }
            set {
                this.cursorRequestedTypeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public CursorPlanTypeCursorConcurrency CursorConcurrency {
            get {
                return this.cursorConcurrencyField;
            }
            set {
                this.cursorConcurrencyField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CursorConcurrencySpecified {
            get {
                return this.cursorConcurrencyFieldSpecified;
            }
            set {
                this.cursorConcurrencyFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ForwardOnly {
            get {
                return this.forwardOnlyField;
            }
            set {
                this.forwardOnlyField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ForwardOnlySpecified {
            get {
                return this.forwardOnlyFieldSpecified;
            }
            set {
                this.forwardOnlyFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CursorPlanTypeOperation {
    
        private QueryPlanType queryPlanField;
    
        private FunctionType[] uDFField;
    
        private CursorPlanTypeOperationOperationType operationTypeField;
    
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("UDF")]
        public FunctionType[] UDF {
            get {
                return this.uDFField;
            }
            set {
                this.uDFField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public CursorPlanTypeOperationOperationType OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class FunctionType {
    
        private StmtBlockType statementsField;
    
        private string procNameField;
    
        /// <remarks/>
        public StmtBlockType Statements {
            get {
                return this.statementsField;
            }
            set {
                this.statementsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string ProcName {
            get {
                return this.procNameField;
            }
            set {
                this.procNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CursorPlanTypeOperationOperationType {
    
        /// <remarks/>
        FetchQuery,
    
        /// <remarks/>
        PopulateQuery,
    
        /// <remarks/>
        RefreshQuery,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CursorType {
    
        /// <remarks/>
        Dynamic,
    
        /// <remarks/>
        FastForward,
    
        /// <remarks/>
        Keyset,
    
        /// <remarks/>
        SnapShot,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CursorPlanTypeCursorConcurrency {
    
        /// <remarks/>
        [XmlEnum("Read Only")]
        ReadOnly,
    
        /// <remarks/>
        Pessimistic,
    
        /// <remarks/>
        Optimistic,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class OptimizerHardwareDependentPropertiesType {
    
        private ulong estimatedAvailableMemoryGrantField;
    
        private ulong estimatedPagesCachedField;
    
        private ulong estimatedAvailableDegreeOfParallelismField;
    
        private bool estimatedAvailableDegreeOfParallelismFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong EstimatedAvailableMemoryGrant {
            get {
                return this.estimatedAvailableMemoryGrantField;
            }
            set {
                this.estimatedAvailableMemoryGrantField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong EstimatedPagesCached {
            get {
                return this.estimatedPagesCachedField;
            }
            set {
                this.estimatedPagesCachedField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong EstimatedAvailableDegreeOfParallelism {
            get {
                return this.estimatedAvailableDegreeOfParallelismField;
            }
            set {
                this.estimatedAvailableDegreeOfParallelismField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool EstimatedAvailableDegreeOfParallelismSpecified {
            get {
                return this.estimatedAvailableDegreeOfParallelismFieldSpecified;
            }
            set {
                this.estimatedAvailableDegreeOfParallelismFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MemoryGrantType {
    
        private ulong serialRequiredMemoryField;
    
        private ulong serialDesiredMemoryField;
    
        private ulong requiredMemoryField;
    
        private bool requiredMemoryFieldSpecified;
    
        private ulong desiredMemoryField;
    
        private bool desiredMemoryFieldSpecified;
    
        private ulong requestedMemoryField;
    
        private bool requestedMemoryFieldSpecified;
    
        private ulong grantWaitTimeField;
    
        private bool grantWaitTimeFieldSpecified;
    
        private ulong grantedMemoryField;
    
        private bool grantedMemoryFieldSpecified;
    
        private ulong maxUsedMemoryField;
    
        private bool maxUsedMemoryFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong SerialRequiredMemory {
            get {
                return this.serialRequiredMemoryField;
            }
            set {
                this.serialRequiredMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong SerialDesiredMemory {
            get {
                return this.serialDesiredMemoryField;
            }
            set {
                this.serialDesiredMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong RequiredMemory {
            get {
                return this.requiredMemoryField;
            }
            set {
                this.requiredMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool RequiredMemorySpecified {
            get {
                return this.requiredMemoryFieldSpecified;
            }
            set {
                this.requiredMemoryFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong DesiredMemory {
            get {
                return this.desiredMemoryField;
            }
            set {
                this.desiredMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool DesiredMemorySpecified {
            get {
                return this.desiredMemoryFieldSpecified;
            }
            set {
                this.desiredMemoryFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong RequestedMemory {
            get {
                return this.requestedMemoryField;
            }
            set {
                this.requestedMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool RequestedMemorySpecified {
            get {
                return this.requestedMemoryFieldSpecified;
            }
            set {
                this.requestedMemoryFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong GrantWaitTime {
            get {
                return this.grantWaitTimeField;
            }
            set {
                this.grantWaitTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool GrantWaitTimeSpecified {
            get {
                return this.grantWaitTimeFieldSpecified;
            }
            set {
                this.grantWaitTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong GrantedMemory {
            get {
                return this.grantedMemoryField;
            }
            set {
                this.grantedMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool GrantedMemorySpecified {
            get {
                return this.grantedMemoryFieldSpecified;
            }
            set {
                this.grantedMemoryFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong MaxUsedMemory {
            get {
                return this.maxUsedMemoryField;
            }
            set {
                this.maxUsedMemoryField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool MaxUsedMemorySpecified {
            get {
                return this.maxUsedMemoryFieldSpecified;
            }
            set {
                this.maxUsedMemoryFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class AffectingConvertWarningType {
    
        private AffectingConvertWarningTypeConvertIssue convertIssueField;
    
        private string expressionField;
    
        /// <remarks/>
        [XmlAttribute()]
        public AffectingConvertWarningTypeConvertIssue ConvertIssue {
            get {
                return this.convertIssueField;
            }
            set {
                this.convertIssueField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum AffectingConvertWarningTypeConvertIssue {
    
        /// <remarks/>
        [XmlEnum("Cardinality Estimate")]
        CardinalityEstimate,
    
        /// <remarks/>
        [XmlEnum("Seek Plan")]
        SeekPlan,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class WaitWarningType {
    
        private WaitWarningTypeWaitType waitTypeField;
    
        private ulong waitTimeField;
    
        private bool waitTimeFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public WaitWarningTypeWaitType WaitType {
            get {
                return this.waitTypeField;
            }
            set {
                this.waitTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong WaitTime {
            get {
                return this.waitTimeField;
            }
            set {
                this.waitTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool WaitTimeSpecified {
            get {
                return this.waitTimeFieldSpecified;
            }
            set {
                this.waitTimeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum WaitWarningTypeWaitType {
    
        /// <remarks/>
        [XmlEnum("Memory Grant")]
        MemoryGrant,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SpillToTempDbType {
    
        private ulong spillLevelField;
    
        private bool spillLevelFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong SpillLevel {
            get {
                return this.spillLevelField;
            }
            set {
                this.spillLevelField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool SpillLevelSpecified {
            get {
                return this.spillLevelFieldSpecified;
            }
            set {
                this.spillLevelFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(TypeName="ColumnReferenceListType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ColumnReferenceListType1 {
    
        private ColumnReferenceType[] columnReferenceField;
    
        /// <remarks/>
        [XmlElement("ColumnReference")]
        public ColumnReferenceType[] ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ColumnReferenceType {
    
        private ScalarType scalarOperatorField;
    
        private InternalInfoType internalInfoField;
    
        private string serverField;
    
        private string databaseField;
    
        private string schemaField;
    
        private string tableField;
    
        private string aliasField;
    
        private string columnField;
    
        private bool computedColumnField;
    
        private bool computedColumnFieldSpecified;
    
        private string parameterCompiledValueField;
    
        private string parameterRuntimeValueField;
    
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ComputedColumn {
            get {
                return this.computedColumnField;
            }
            set {
                this.computedColumnField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ComputedColumnSpecified {
            get {
                return this.computedColumnFieldSpecified;
            }
            set {
                this.computedColumnFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string ParameterCompiledValue {
            get {
                return this.parameterCompiledValueField;
            }
            set {
                this.parameterCompiledValueField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string ParameterRuntimeValue {
            get {
                return this.parameterRuntimeValueField;
            }
            set {
                this.parameterRuntimeValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarType {
    
        private object itemField;
    
        private InternalInfoType internalInfoField;
    
        private string scalarStringField;
    
        /// <remarks/>
        [XmlElement("Aggregate", typeof(AggregateType))]
        [XmlElement("Arithmetic", typeof(ArithmeticType))]
        [XmlElement("Assign", typeof(AssignType))]
        [XmlElement("Compare", typeof(CompareType))]
        [XmlElement("Const", typeof(ConstType))]
        [XmlElement("Convert", typeof(ConvertType))]
        [XmlElement("IF", typeof(ConditionalType))]
        [XmlElement("Identifier", typeof(IdentType))]
        [XmlElement("Intrinsic", typeof(IntrinsicType))]
        [XmlElement("Logical", typeof(LogicalType))]
        [XmlElement("MultipleAssign", typeof(MultAssignType))]
        [XmlElement("ScalarExpressionList", typeof(ScalarExpressionListType))]
        [XmlElement("Sequence", typeof(ScalarSequenceType))]
        [XmlElement("Subquery", typeof(SubqueryType))]
        [XmlElement("UDTMethod", typeof(UDTMethodType))]
        [XmlElement("UserDefinedAggregate", typeof(UDAggregateType))]
        [XmlElement("UserDefinedFunction", typeof(UDFType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string ScalarString {
            get {
                return this.scalarStringField;
            }
            set {
                this.scalarStringField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class AggregateType {
    
        private ScalarType[] scalarOperatorField;
    
        private string aggTypeField;
    
        private bool distinctField;
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string AggType {
            get {
                return this.aggTypeField;
            }
            set {
                this.aggTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ArithmeticType {
    
        private ScalarType[] scalarOperatorField;
    
        private ArithmeticOperationType operationField;
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ArithmeticOperationType Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ArithmeticOperationType {
    
        /// <remarks/>
        ADD,
    
        /// <remarks/>
        BIT_ADD,
    
        /// <remarks/>
        BIT_AND,
    
        /// <remarks/>
        BIT_COMBINE,
    
        /// <remarks/>
        BIT_NOT,
    
        /// <remarks/>
        BIT_OR,
    
        /// <remarks/>
        BIT_XOR,
    
        /// <remarks/>
        DIV,
    
        /// <remarks/>
        HASH,
    
        /// <remarks/>
        MINUS,
    
        /// <remarks/>
        MOD,
    
        /// <remarks/>
        MULT,
    
        /// <remarks/>
        SUB,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class AssignType {
    
        private object itemField;
    
        private ScalarType scalarOperatorField;
    
        /// <remarks/>
        [XmlElement("ColumnReference", typeof(ColumnReferenceType), Order=0)]
        [XmlElement("ScalarOperator", typeof(ScalarType), Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement(Order=1)]
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CompareType {
    
        private ScalarType[] scalarOperatorField;
    
        private CompareOpType compareOpField;
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public CompareOpType CompareOp {
            get {
                return this.compareOpField;
            }
            set {
                this.compareOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CompareOpType {
    
        /// <remarks/>
        [XmlEnum("BINARY IS")]
        BINARYIS,
    
        /// <remarks/>
        [XmlEnum("BOTH NULL")]
        BOTHNULL,
    
        /// <remarks/>
        EQ,
    
        /// <remarks/>
        GE,
    
        /// <remarks/>
        GT,
    
        /// <remarks/>
        IS,
    
        /// <remarks/>
        [XmlEnum("IS NOT")]
        ISNOT,
    
        /// <remarks/>
        [XmlEnum("IS NOT NULL")]
        ISNOTNULL,
    
        /// <remarks/>
        [XmlEnum("IS NULL")]
        ISNULL,
    
        /// <remarks/>
        LE,
    
        /// <remarks/>
        LT,
    
        /// <remarks/>
        NE,
    
        /// <remarks/>
        [XmlEnum("ONE NULL")]
        ONENULL,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConstType {
    
        private string constValueField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string ConstValue {
            get {
                return this.constValueField;
            }
            set {
                this.constValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConvertType {
    
        private ScalarExpressionType styleField;
    
        private ScalarType scalarOperatorField;
    
        private string dataTypeField;
    
        private int lengthField;
    
        private bool lengthFieldSpecified;
    
        private int precisionField;
    
        private bool precisionFieldSpecified;
    
        private int scaleField;
    
        private bool scaleFieldSpecified;
    
        private int style1Field;
    
        private bool implicitField;
    
        /// <remarks/>
        public ScalarExpressionType Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
            }
        }
    
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool LengthSpecified {
            get {
                return this.lengthFieldSpecified;
            }
            set {
                this.lengthFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int Precision {
            get {
                return this.precisionField;
            }
            set {
                this.precisionField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool PrecisionSpecified {
            get {
                return this.precisionFieldSpecified;
            }
            set {
                this.precisionFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int Scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ScaleSpecified {
            get {
                return this.scaleFieldSpecified;
            }
            set {
                this.scaleFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute("Style")]
        public int Style1 {
            get {
                return this.style1Field;
            }
            set {
                this.style1Field = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Implicit {
            get {
                return this.implicitField;
            }
            set {
                this.implicitField = value;
            }
        }
    }

    /// <remarks/>
    [XmlInclude(typeof(SetPredicateElementType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarExpressionType {
    
        private ScalarType scalarOperatorField;
    
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SetPredicateElementType : ScalarExpressionType {
    
        private SetPredicateType setPredicateTypeField;
    
        private bool setPredicateTypeFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public SetPredicateType SetPredicateType {
            get {
                return this.setPredicateTypeField;
            }
            set {
                this.setPredicateTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool SetPredicateTypeSpecified {
            get {
                return this.setPredicateTypeFieldSpecified;
            }
            set {
                this.setPredicateTypeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum SetPredicateType {
    
        /// <remarks/>
        Update,
    
        /// <remarks/>
        Insert,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConditionalType {
    
        private ScalarExpressionType conditionField;
    
        private ScalarExpressionType thenField;
    
        private ScalarExpressionType elseField;
    
        /// <remarks/>
        public ScalarExpressionType Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType Then {
            get {
                return this.thenField;
            }
            set {
                this.thenField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType Else {
            get {
                return this.elseField;
            }
            set {
                this.elseField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class IdentType {
    
        private ColumnReferenceType columnReferenceField;
    
        private string tableField;
    
        /// <remarks/>
        public ColumnReferenceType ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class IntrinsicType {
    
        private ScalarType[] scalarOperatorField;
    
        private string functionNameField;
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class LogicalType {
    
        private ScalarType[] scalarOperatorField;
    
        private LogicalOperationType operationField;
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public LogicalOperationType Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum LogicalOperationType {
    
        /// <remarks/>
        AND,
    
        /// <remarks/>
        IMPLIES,
    
        /// <remarks/>
        [XmlEnum("IS NOT NULL")]
        ISNOTNULL,
    
        /// <remarks/>
        [XmlEnum("IS NULL")]
        ISNULL,
    
        /// <remarks/>
        IS,
    
        /// <remarks/>
        IsFalseOrNull,
    
        /// <remarks/>
        NOT,
    
        /// <remarks/>
        OR,
    
        /// <remarks/>
        XOR,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MultAssignType {
    
        private AssignType[] assignField;
    
        /// <remarks/>
        [XmlElement("Assign")]
        public AssignType[] Assign {
            get {
                return this.assignField;
            }
            set {
                this.assignField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarExpressionListType {
    
        private ScalarType[] scalarOperatorField;
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarSequenceType {
    
        private string functionNameField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SubqueryType {
    
        private ScalarType scalarOperatorField;
    
        private RelOpType relOpField;
    
        private SubqueryOperationType operationField;
    
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public SubqueryOperationType Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RelOpType {
    
        private ColumnReferenceType[] outputListField;
    
        private WarningsType warningsField;
    
        private MemoryFractionsType memoryFractionsField;
    
        private RunTimeInformationTypeRunTimeCountersPerThread[] runTimeInformationField;
    
        private RunTimePartitionSummaryType runTimePartitionSummaryField;
    
        private InternalInfoType internalInfoField;
    
        private RelOpBaseType itemField;
    
        private ItemChoiceType itemElementNameField;
    
        private double avgRowSizeField;
    
        private double estimateCPUField;
    
        private double estimateIOField;
    
        private double estimateRebindsField;
    
        private double estimateRewindsField;
    
        private ExecutionModeType estimatedExecutionModeField;
    
        private bool estimatedExecutionModeFieldSpecified;
    
        private bool groupExecutedField;
    
        private bool groupExecutedFieldSpecified;
    
        private double estimateRowsField;
    
        private LogicalOpType logicalOpField;
    
        private int nodeIdField;
    
        private bool parallelField;
    
        private bool partitionedField;
    
        private bool partitionedFieldSpecified;
    
        private PhysicalOpType physicalOpField;
    
        private double estimatedTotalSubtreeCostField;
    
        private double tableCardinalityField;
    
        private bool tableCardinalityFieldSpecified;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] OutputList {
            get {
                return this.outputListField;
            }
            set {
                this.outputListField = value;
            }
        }
    
        /// <remarks/>
        public WarningsType Warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
    
        /// <remarks/>
        public MemoryFractionsType MemoryFractions {
            get {
                return this.memoryFractionsField;
            }
            set {
                this.memoryFractionsField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("RunTimeCountersPerThread", IsNullable=false)]
        public RunTimeInformationTypeRunTimeCountersPerThread[] RunTimeInformation {
            get {
                return this.runTimeInformationField;
            }
            set {
                this.runTimeInformationField = value;
            }
        }
    
        /// <remarks/>
        public RunTimePartitionSummaryType RunTimePartitionSummary {
            get {
                return this.runTimePartitionSummaryField;
            }
            set {
                this.runTimePartitionSummaryField = value;
            }
        }
    
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("Assert", typeof(FilterType))]
        [XmlElement("BatchHashTableBuild", typeof(BatchHashTableBuildType))]
        [XmlElement("Bitmap", typeof(BitmapType))]
        [XmlElement("Collapse", typeof(CollapseType))]
        [XmlElement("ComputeScalar", typeof(ComputeScalarType))]
        [XmlElement("Concat", typeof(ConcatType))]
        [XmlElement("ConstantScan", typeof(ConstantScanType))]
        [XmlElement("CreateIndex", typeof(CreateIndexType))]
        [XmlElement("DeletedScan", typeof(RowsetType))]
        [XmlElement("Extension", typeof(UDXType))]
        [XmlElement("Filter", typeof(FilterType))]
        [XmlElement("Generic", typeof(GenericType))]
        [XmlElement("Hash", typeof(HashType))]
        [XmlElement("IndexScan", typeof(IndexScanType))]
        [XmlElement("InsertedScan", typeof(RowsetType))]
        [XmlElement("LogRowScan", typeof(RelOpBaseType))]
        [XmlElement("Merge", typeof(MergeType))]
        [XmlElement("MergeInterval", typeof(SimpleIteratorOneChildType))]
        [XmlElement("NestedLoops", typeof(NestedLoopsType))]
        [XmlElement("OnlineIndex", typeof(CreateIndexType))]
        [XmlElement("Parallelism", typeof(ParallelismType))]
        [XmlElement("ParameterTableScan", typeof(RelOpBaseType))]
        [XmlElement("PrintDataflow", typeof(RelOpBaseType))]
        [XmlElement("RemoteFetch", typeof(RemoteFetchType))]
        [XmlElement("RemoteModify", typeof(RemoteModifyType))]
        [XmlElement("RemoteQuery", typeof(RemoteQueryType))]
        [XmlElement("RemoteRange", typeof(RemoteRangeType))]
        [XmlElement("RemoteScan", typeof(RemoteType))]
        [XmlElement("RowCountSpool", typeof(SpoolType))]
        [XmlElement("ScalarInsert", typeof(ScalarInsertType))]
        [XmlElement("Segment", typeof(SegmentType))]
        [XmlElement("Sequence", typeof(SequenceType))]
        [XmlElement("SequenceProject", typeof(ComputeScalarType))]
        [XmlElement("SimpleUpdate", typeof(SimpleUpdateType))]
        [XmlElement("Sort", typeof(SortType))]
        [XmlElement("Split", typeof(SplitType))]
        [XmlElement("Spool", typeof(SpoolType))]
        [XmlElement("StreamAggregate", typeof(StreamAggregateType))]
        [XmlElement("Switch", typeof(SwitchType))]
        [XmlElement("TableScan", typeof(TableScanType))]
        [XmlElement("TableValuedFunction", typeof(TableValuedFunctionType))]
        [XmlElement("Top", typeof(TopType))]
        [XmlElement("TopSort", typeof(TopSortType))]
        [XmlElement("Update", typeof(UpdateType))]
        [XmlElement("WindowSpool", typeof(WindowType))]
        [XmlChoiceIdentifier("ItemElementName")]
        public RelOpBaseType Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double AvgRowSize {
            get {
                return this.avgRowSizeField;
            }
            set {
                this.avgRowSizeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double EstimateCPU {
            get {
                return this.estimateCPUField;
            }
            set {
                this.estimateCPUField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double EstimateIO {
            get {
                return this.estimateIOField;
            }
            set {
                this.estimateIOField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double EstimateRebinds {
            get {
                return this.estimateRebindsField;
            }
            set {
                this.estimateRebindsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double EstimateRewinds {
            get {
                return this.estimateRewindsField;
            }
            set {
                this.estimateRewindsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ExecutionModeType EstimatedExecutionMode {
            get {
                return this.estimatedExecutionModeField;
            }
            set {
                this.estimatedExecutionModeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool EstimatedExecutionModeSpecified {
            get {
                return this.estimatedExecutionModeFieldSpecified;
            }
            set {
                this.estimatedExecutionModeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool GroupExecuted {
            get {
                return this.groupExecutedField;
            }
            set {
                this.groupExecutedField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool GroupExecutedSpecified {
            get {
                return this.groupExecutedFieldSpecified;
            }
            set {
                this.groupExecutedFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double EstimateRows {
            get {
                return this.estimateRowsField;
            }
            set {
                this.estimateRowsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public LogicalOpType LogicalOp {
            get {
                return this.logicalOpField;
            }
            set {
                this.logicalOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int NodeId {
            get {
                return this.nodeIdField;
            }
            set {
                this.nodeIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Parallel {
            get {
                return this.parallelField;
            }
            set {
                this.parallelField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Partitioned {
            get {
                return this.partitionedField;
            }
            set {
                this.partitionedField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool PartitionedSpecified {
            get {
                return this.partitionedFieldSpecified;
            }
            set {
                this.partitionedFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public PhysicalOpType PhysicalOp {
            get {
                return this.physicalOpField;
            }
            set {
                this.physicalOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double EstimatedTotalSubtreeCost {
            get {
                return this.estimatedTotalSubtreeCostField;
            }
            set {
                this.estimatedTotalSubtreeCostField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double TableCardinality {
            get {
                return this.tableCardinalityField;
            }
            set {
                this.tableCardinalityField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool TableCardinalitySpecified {
            get {
                return this.tableCardinalityFieldSpecified;
            }
            set {
                this.tableCardinalityFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class WarningsType {
    
        private object[] itemsField;
    
        private bool noJoinPredicateField;
    
        private bool noJoinPredicateFieldSpecified;
    
        private bool spatialGuessField;
    
        private bool spatialGuessFieldSpecified;
    
        private bool unmatchedIndexesField;
    
        private bool unmatchedIndexesFieldSpecified;
    
        private bool fullUpdateForOnlineIndexBuildField;
    
        private bool fullUpdateForOnlineIndexBuildFieldSpecified;
    
        /// <remarks/>
        [XmlElement("ColumnsWithNoStatistics", typeof(ColumnReferenceListType1))]
        [XmlElement("PlanAffectingConvert", typeof(AffectingConvertWarningType))]
        [XmlElement("SpillToTempDb", typeof(SpillToTempDbType))]
        [XmlElement("Wait", typeof(WaitWarningType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool NoJoinPredicate {
            get {
                return this.noJoinPredicateField;
            }
            set {
                this.noJoinPredicateField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool NoJoinPredicateSpecified {
            get {
                return this.noJoinPredicateFieldSpecified;
            }
            set {
                this.noJoinPredicateFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool SpatialGuess {
            get {
                return this.spatialGuessField;
            }
            set {
                this.spatialGuessField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool SpatialGuessSpecified {
            get {
                return this.spatialGuessFieldSpecified;
            }
            set {
                this.spatialGuessFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool UnmatchedIndexes {
            get {
                return this.unmatchedIndexesField;
            }
            set {
                this.unmatchedIndexesField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool UnmatchedIndexesSpecified {
            get {
                return this.unmatchedIndexesFieldSpecified;
            }
            set {
                this.unmatchedIndexesFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool FullUpdateForOnlineIndexBuild {
            get {
                return this.fullUpdateForOnlineIndexBuildField;
            }
            set {
                this.fullUpdateForOnlineIndexBuildField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool FullUpdateForOnlineIndexBuildSpecified {
            get {
                return this.fullUpdateForOnlineIndexBuildFieldSpecified;
            }
            set {
                this.fullUpdateForOnlineIndexBuildFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MemoryFractionsType {
    
        private double inputField;
    
        private double outputField;
    
        /// <remarks/>
        [XmlAttribute()]
        public double Input {
            get {
                return this.inputField;
            }
            set {
                this.inputField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double Output {
            get {
                return this.outputField;
            }
            set {
                this.outputField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RunTimeInformationTypeRunTimeCountersPerThread {
    
        private int threadField;
    
        private ulong actualRebindsField;
    
        private bool actualRebindsFieldSpecified;
    
        private ulong actualRewindsField;
    
        private bool actualRewindsFieldSpecified;
    
        private ulong actualRowsField;
    
        private ulong batchesField;
    
        private bool batchesFieldSpecified;
    
        private ulong actualEndOfScansField;
    
        private ulong actualExecutionsField;
    
        private ExecutionModeType actualExecutionModeField;
    
        private bool actualExecutionModeFieldSpecified;
    
        private ulong taskAddrField;
    
        private bool taskAddrFieldSpecified;
    
        private ulong schedulerIdField;
    
        private bool schedulerIdFieldSpecified;
    
        private ulong firstActiveTimeField;
    
        private bool firstActiveTimeFieldSpecified;
    
        private ulong lastActiveTimeField;
    
        private bool lastActiveTimeFieldSpecified;
    
        private ulong openTimeField;
    
        private bool openTimeFieldSpecified;
    
        private ulong firstRowTimeField;
    
        private bool firstRowTimeFieldSpecified;
    
        private ulong lastRowTimeField;
    
        private bool lastRowTimeFieldSpecified;
    
        private ulong closeTimeField;
    
        private bool closeTimeFieldSpecified;
    
        private ulong actualElapsedmsField;
    
        private bool actualElapsedmsFieldSpecified;
    
        private ulong actualCPUmsField;
    
        private bool actualCPUmsFieldSpecified;
    
        private ulong actualScansField;
    
        private bool actualScansFieldSpecified;
    
        private ulong actualLogicalReadsField;
    
        private bool actualLogicalReadsFieldSpecified;
    
        private ulong actualPhysicalReadsField;
    
        private bool actualPhysicalReadsFieldSpecified;
    
        private ulong actualReadAheadsField;
    
        private bool actualReadAheadsFieldSpecified;
    
        private ulong actualLobLogicalReadsField;
    
        private bool actualLobLogicalReadsFieldSpecified;
    
        private ulong actualLobPhysicalReadsField;
    
        private bool actualLobPhysicalReadsFieldSpecified;
    
        private ulong actualLobReadAheadsField;
    
        private bool actualLobReadAheadsFieldSpecified;
    
        private int segmentReadsField;
    
        private bool segmentReadsFieldSpecified;
    
        private int segmentSkipsField;
    
        private bool segmentSkipsFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public int Thread {
            get {
                return this.threadField;
            }
            set {
                this.threadField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualRebinds {
            get {
                return this.actualRebindsField;
            }
            set {
                this.actualRebindsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualRebindsSpecified {
            get {
                return this.actualRebindsFieldSpecified;
            }
            set {
                this.actualRebindsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualRewinds {
            get {
                return this.actualRewindsField;
            }
            set {
                this.actualRewindsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualRewindsSpecified {
            get {
                return this.actualRewindsFieldSpecified;
            }
            set {
                this.actualRewindsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualRows {
            get {
                return this.actualRowsField;
            }
            set {
                this.actualRowsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong Batches {
            get {
                return this.batchesField;
            }
            set {
                this.batchesField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool BatchesSpecified {
            get {
                return this.batchesFieldSpecified;
            }
            set {
                this.batchesFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualEndOfScans {
            get {
                return this.actualEndOfScansField;
            }
            set {
                this.actualEndOfScansField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualExecutions {
            get {
                return this.actualExecutionsField;
            }
            set {
                this.actualExecutionsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ExecutionModeType ActualExecutionMode {
            get {
                return this.actualExecutionModeField;
            }
            set {
                this.actualExecutionModeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualExecutionModeSpecified {
            get {
                return this.actualExecutionModeFieldSpecified;
            }
            set {
                this.actualExecutionModeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong TaskAddr {
            get {
                return this.taskAddrField;
            }
            set {
                this.taskAddrField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool TaskAddrSpecified {
            get {
                return this.taskAddrFieldSpecified;
            }
            set {
                this.taskAddrFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong SchedulerId {
            get {
                return this.schedulerIdField;
            }
            set {
                this.schedulerIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool SchedulerIdSpecified {
            get {
                return this.schedulerIdFieldSpecified;
            }
            set {
                this.schedulerIdFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong FirstActiveTime {
            get {
                return this.firstActiveTimeField;
            }
            set {
                this.firstActiveTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool FirstActiveTimeSpecified {
            get {
                return this.firstActiveTimeFieldSpecified;
            }
            set {
                this.firstActiveTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong LastActiveTime {
            get {
                return this.lastActiveTimeField;
            }
            set {
                this.lastActiveTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool LastActiveTimeSpecified {
            get {
                return this.lastActiveTimeFieldSpecified;
            }
            set {
                this.lastActiveTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong OpenTime {
            get {
                return this.openTimeField;
            }
            set {
                this.openTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool OpenTimeSpecified {
            get {
                return this.openTimeFieldSpecified;
            }
            set {
                this.openTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong FirstRowTime {
            get {
                return this.firstRowTimeField;
            }
            set {
                this.firstRowTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool FirstRowTimeSpecified {
            get {
                return this.firstRowTimeFieldSpecified;
            }
            set {
                this.firstRowTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong LastRowTime {
            get {
                return this.lastRowTimeField;
            }
            set {
                this.lastRowTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool LastRowTimeSpecified {
            get {
                return this.lastRowTimeFieldSpecified;
            }
            set {
                this.lastRowTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong CloseTime {
            get {
                return this.closeTimeField;
            }
            set {
                this.closeTimeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CloseTimeSpecified {
            get {
                return this.closeTimeFieldSpecified;
            }
            set {
                this.closeTimeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualElapsedms {
            get {
                return this.actualElapsedmsField;
            }
            set {
                this.actualElapsedmsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualElapsedmsSpecified {
            get {
                return this.actualElapsedmsFieldSpecified;
            }
            set {
                this.actualElapsedmsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualCPUms {
            get {
                return this.actualCPUmsField;
            }
            set {
                this.actualCPUmsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualCPUmsSpecified {
            get {
                return this.actualCPUmsFieldSpecified;
            }
            set {
                this.actualCPUmsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualScans {
            get {
                return this.actualScansField;
            }
            set {
                this.actualScansField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualScansSpecified {
            get {
                return this.actualScansFieldSpecified;
            }
            set {
                this.actualScansFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualLogicalReads {
            get {
                return this.actualLogicalReadsField;
            }
            set {
                this.actualLogicalReadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualLogicalReadsSpecified {
            get {
                return this.actualLogicalReadsFieldSpecified;
            }
            set {
                this.actualLogicalReadsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualPhysicalReads {
            get {
                return this.actualPhysicalReadsField;
            }
            set {
                this.actualPhysicalReadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualPhysicalReadsSpecified {
            get {
                return this.actualPhysicalReadsFieldSpecified;
            }
            set {
                this.actualPhysicalReadsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualReadAheads {
            get {
                return this.actualReadAheadsField;
            }
            set {
                this.actualReadAheadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualReadAheadsSpecified {
            get {
                return this.actualReadAheadsFieldSpecified;
            }
            set {
                this.actualReadAheadsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualLobLogicalReads {
            get {
                return this.actualLobLogicalReadsField;
            }
            set {
                this.actualLobLogicalReadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualLobLogicalReadsSpecified {
            get {
                return this.actualLobLogicalReadsFieldSpecified;
            }
            set {
                this.actualLobLogicalReadsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualLobPhysicalReads {
            get {
                return this.actualLobPhysicalReadsField;
            }
            set {
                this.actualLobPhysicalReadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualLobPhysicalReadsSpecified {
            get {
                return this.actualLobPhysicalReadsFieldSpecified;
            }
            set {
                this.actualLobPhysicalReadsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong ActualLobReadAheads {
            get {
                return this.actualLobReadAheadsField;
            }
            set {
                this.actualLobReadAheadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ActualLobReadAheadsSpecified {
            get {
                return this.actualLobReadAheadsFieldSpecified;
            }
            set {
                this.actualLobReadAheadsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int SegmentReads {
            get {
                return this.segmentReadsField;
            }
            set {
                this.segmentReadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool SegmentReadsSpecified {
            get {
                return this.segmentReadsFieldSpecified;
            }
            set {
                this.segmentReadsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int SegmentSkips {
            get {
                return this.segmentSkipsField;
            }
            set {
                this.segmentSkipsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool SegmentSkipsSpecified {
            get {
                return this.segmentSkipsFieldSpecified;
            }
            set {
                this.segmentSkipsFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ExecutionModeType {
    
        /// <remarks/>
        Row,
    
        /// <remarks/>
        Batch,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RunTimePartitionSummaryType {
    
        private RunTimePartitionSummaryTypePartitionsAccessed partitionsAccessedField;
    
        /// <remarks/>
        public RunTimePartitionSummaryTypePartitionsAccessed PartitionsAccessed {
            get {
                return this.partitionsAccessedField;
            }
            set {
                this.partitionsAccessedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RunTimePartitionSummaryTypePartitionsAccessed {
    
        private RunTimePartitionSummaryTypePartitionsAccessedPartitionRange[] partitionRangeField;
    
        private ulong partitionCountField;
    
        /// <remarks/>
        [XmlElement("PartitionRange")]
        public RunTimePartitionSummaryTypePartitionsAccessedPartitionRange[] PartitionRange {
            get {
                return this.partitionRangeField;
            }
            set {
                this.partitionRangeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong PartitionCount {
            get {
                return this.partitionCountField;
            }
            set {
                this.partitionCountField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RunTimePartitionSummaryTypePartitionsAccessedPartitionRange {
    
        private ulong startField;
    
        private ulong endField;
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ulong End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class FilterType : RelOpBaseType {
    
        private RelOpType relOpField;
    
        private ScalarExpressionType predicateField;
    
        private bool startupExpressionField;
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool StartupExpression {
            get {
                return this.startupExpressionField;
            }
            set {
                this.startupExpressionField = value;
            }
        }
    }

    /// <remarks/>
    [XmlInclude(typeof(GenericType))]
    [XmlInclude(typeof(RemoteType))]
    [XmlInclude(typeof(RemoteQueryType))]
    [XmlInclude(typeof(RemoteModifyType))]
    [XmlInclude(typeof(RemoteFetchType))]
    [XmlInclude(typeof(RemoteRangeType))]
    [XmlInclude(typeof(BatchHashTableBuildType))]
    [XmlInclude(typeof(SpoolType))]
    [XmlInclude(typeof(WindowType))]
    [XmlInclude(typeof(UDXType))]
    [XmlInclude(typeof(TopType))]
    [XmlInclude(typeof(SplitType))]
    [XmlInclude(typeof(SequenceType))]
    [XmlInclude(typeof(SegmentType))]
    [XmlInclude(typeof(NestedLoopsType))]
    [XmlInclude(typeof(MergeType))]
    [XmlInclude(typeof(ConcatType))]
    [XmlInclude(typeof(SwitchType))]
    [XmlInclude(typeof(CollapseType))]
    [XmlInclude(typeof(BitmapType))]
    [XmlInclude(typeof(SortType))]
    [XmlInclude(typeof(TopSortType))]
    [XmlInclude(typeof(StreamAggregateType))]
    [XmlInclude(typeof(ParallelismType))]
    [XmlInclude(typeof(ComputeScalarType))]
    [XmlInclude(typeof(HashType))]
    [XmlInclude(typeof(TableValuedFunctionType))]
    [XmlInclude(typeof(RowsetType))]
    [XmlInclude(typeof(ScalarInsertType))]
    [XmlInclude(typeof(CreateIndexType))]
    [XmlInclude(typeof(UpdateType))]
    [XmlInclude(typeof(SimpleUpdateType))]
    [XmlInclude(typeof(IndexScanType))]
    [XmlInclude(typeof(TableScanType))]
    [XmlInclude(typeof(ConstantScanType))]
    [XmlInclude(typeof(FilterType))]
    [XmlInclude(typeof(SimpleIteratorOneChildType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RelOpBaseType {
    
        private DefinedValuesListTypeDefinedValue[] definedValuesField;
    
        private InternalInfoType internalInfoField;
    
        /// <remarks/>
        [XmlArrayItem("DefinedValue", IsNullable=false)]
        public DefinedValuesListTypeDefinedValue[] DefinedValues {
            get {
                return this.definedValuesField;
            }
            set {
                this.definedValuesField = value;
            }
        }
    
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class DefinedValuesListTypeDefinedValue {
    
        private object itemField;
    
        private object[] itemsField;
    
        /// <remarks/>
        [XmlElement("ColumnReference", typeof(ColumnReferenceType), Order=0)]
        [XmlElement("ValueVector", typeof(DefinedValuesListTypeDefinedValueValueVector), Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("ColumnReference", typeof(ColumnReferenceType), Order=1)]
        [XmlElement("ScalarOperator", typeof(ScalarType), Order=1)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class DefinedValuesListTypeDefinedValueValueVector {
    
        private ColumnReferenceType[] columnReferenceField;
    
        /// <remarks/>
        [XmlElement("ColumnReference")]
        public ColumnReferenceType[] ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class GenericType : RelOpBaseType {
    
        private RelOpType[] relOpField;
    
        /// <remarks/>
        [XmlElement("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [XmlInclude(typeof(RemoteQueryType))]
    [XmlInclude(typeof(RemoteModifyType))]
    [XmlInclude(typeof(RemoteFetchType))]
    [XmlInclude(typeof(RemoteRangeType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteType : RelOpBaseType {
    
        private string remoteSourceField;
    
        private string remoteObjectField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string RemoteSource {
            get {
                return this.remoteSourceField;
            }
            set {
                this.remoteSourceField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string RemoteObject {
            get {
                return this.remoteObjectField;
            }
            set {
                this.remoteObjectField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteQueryType : RemoteType {
    
        private string remoteQueryField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string RemoteQuery {
            get {
                return this.remoteQueryField;
            }
            set {
                this.remoteQueryField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteModifyType : RemoteType {
    
        private ScalarExpressionType setPredicateField;
    
        private RelOpType relOpField;
    
        /// <remarks/>
        public ScalarExpressionType SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteFetchType : RemoteType {
    
        private RelOpType relOpField;
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteRangeType : RemoteType {
    
        private SeekPredicatesType seekPredicatesField;
    
        /// <remarks/>
        public SeekPredicatesType SeekPredicates {
            get {
                return this.seekPredicatesField;
            }
            set {
                this.seekPredicatesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SeekPredicatesType {
    
        private object[] itemsField;
    
        /// <remarks/>
        [XmlElement("SeekPredicate", typeof(SeekPredicateType))]
        [XmlElement("SeekPredicateNew", typeof(SeekPredicateNewType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SeekPredicateType {
    
        private ScanRangeType prefixField;
    
        private ScanRangeType startRangeField;
    
        private ScanRangeType endRangeField;
    
        private SingleColumnReferenceType isNotNullField;
    
        /// <remarks/>
        public ScanRangeType Prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
    
        /// <remarks/>
        public ScanRangeType StartRange {
            get {
                return this.startRangeField;
            }
            set {
                this.startRangeField = value;
            }
        }
    
        /// <remarks/>
        public ScanRangeType EndRange {
            get {
                return this.endRangeField;
            }
            set {
                this.endRangeField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType IsNotNull {
            get {
                return this.isNotNullField;
            }
            set {
                this.isNotNullField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScanRangeType {
    
        private ColumnReferenceType[] rangeColumnsField;
    
        private ScalarType[] rangeExpressionsField;
    
        private CompareOpType scanTypeField;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] RangeColumns {
            get {
                return this.rangeColumnsField;
            }
            set {
                this.rangeColumnsField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ScalarOperator", IsNullable=false)]
        public ScalarType[] RangeExpressions {
            get {
                return this.rangeExpressionsField;
            }
            set {
                this.rangeExpressionsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public CompareOpType ScanType {
            get {
                return this.scanTypeField;
            }
            set {
                this.scanTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SingleColumnReferenceType {
    
        private ColumnReferenceType columnReferenceField;
    
        /// <remarks/>
        public ColumnReferenceType ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SeekPredicateNewType {
    
        private SeekPredicateType[] seekKeysField;
    
        /// <remarks/>
        [XmlElement("SeekKeys")]
        public SeekPredicateType[] SeekKeys {
            get {
                return this.seekKeysField;
            }
            set {
                this.seekKeysField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class BatchHashTableBuildType : RelOpBaseType {
    
        private RelOpType relOpField;
    
        private bool bitmapCreatorField;
    
        private bool bitmapCreatorFieldSpecified;
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool BitmapCreator {
            get {
                return this.bitmapCreatorField;
            }
            set {
                this.bitmapCreatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool BitmapCreatorSpecified {
            get {
                return this.bitmapCreatorFieldSpecified;
            }
            set {
                this.bitmapCreatorFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SpoolType : RelOpBaseType {
    
        private object itemField;
    
        private RelOpType relOpField;
    
        private bool stackField;
    
        private bool stackFieldSpecified;
    
        private int primaryNodeIdField;
    
        private bool primaryNodeIdFieldSpecified;
    
        /// <remarks/>
        [XmlElement("SeekPredicate", typeof(SeekPredicateType))]
        [XmlElement("SeekPredicateNew", typeof(SeekPredicateNewType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Stack {
            get {
                return this.stackField;
            }
            set {
                this.stackField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool StackSpecified {
            get {
                return this.stackFieldSpecified;
            }
            set {
                this.stackFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int PrimaryNodeId {
            get {
                return this.primaryNodeIdField;
            }
            set {
                this.primaryNodeIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool PrimaryNodeIdSpecified {
            get {
                return this.primaryNodeIdFieldSpecified;
            }
            set {
                this.primaryNodeIdFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class WindowType : RelOpBaseType {
    
        private RelOpType relOpField;
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDXType : RelOpBaseType {
    
        private ColumnReferenceType[] usedUDXColumnsField;
    
        private RelOpType relOpField;
    
        private string uDXNameField;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] UsedUDXColumns {
            get {
                return this.usedUDXColumnsField;
            }
            set {
                this.usedUDXColumnsField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string UDXName {
            get {
                return this.uDXNameField;
            }
            set {
                this.uDXNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TopType : RelOpBaseType {
    
        private ColumnReferenceType[] tieColumnsField;
    
        private ScalarExpressionType offsetExpressionField;
    
        private ScalarExpressionType topExpressionField;
    
        private RelOpType relOpField;
    
        private bool rowCountField;
    
        private bool rowCountFieldSpecified;
    
        private int rowsField;
    
        private bool rowsFieldSpecified;
    
        private bool isPercentField;
    
        private bool isPercentFieldSpecified;
    
        private bool withTiesField;
    
        private bool withTiesFieldSpecified;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] TieColumns {
            get {
                return this.tieColumnsField;
            }
            set {
                this.tieColumnsField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType OffsetExpression {
            get {
                return this.offsetExpressionField;
            }
            set {
                this.offsetExpressionField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType TopExpression {
            get {
                return this.topExpressionField;
            }
            set {
                this.topExpressionField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool RowCountSpecified {
            get {
                return this.rowCountFieldSpecified;
            }
            set {
                this.rowCountFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool RowsSpecified {
            get {
                return this.rowsFieldSpecified;
            }
            set {
                this.rowsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool IsPercent {
            get {
                return this.isPercentField;
            }
            set {
                this.isPercentField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool IsPercentSpecified {
            get {
                return this.isPercentFieldSpecified;
            }
            set {
                this.isPercentFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool WithTies {
            get {
                return this.withTiesField;
            }
            set {
                this.withTiesField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool WithTiesSpecified {
            get {
                return this.withTiesFieldSpecified;
            }
            set {
                this.withTiesFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SplitType : RelOpBaseType {
    
        private SingleColumnReferenceType actionColumnField;
    
        private RelOpType relOpField;
    
        /// <remarks/>
        public SingleColumnReferenceType ActionColumn {
            get {
                return this.actionColumnField;
            }
            set {
                this.actionColumnField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SequenceType : RelOpBaseType {
    
        private RelOpType[] relOpField;
    
        /// <remarks/>
        [XmlElement("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SegmentType : RelOpBaseType {
    
        private ColumnReferenceType[] groupByField;
    
        private SingleColumnReferenceType segmentColumnField;
    
        private RelOpType relOpField;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] GroupBy {
            get {
                return this.groupByField;
            }
            set {
                this.groupByField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType SegmentColumn {
            get {
                return this.segmentColumnField;
            }
            set {
                this.segmentColumnField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class NestedLoopsType : RelOpBaseType {
    
        private ScalarExpressionType predicateField;
    
        private ScalarExpressionType passThruField;
    
        private ColumnReferenceType[] outerReferencesField;
    
        private SingleColumnReferenceType partitionIdField;
    
        private SingleColumnReferenceType probeColumnField;
    
        private StarJoinInfoType starJoinInfoField;
    
        private RelOpType[] relOpField;
    
        private bool optimizedField;
    
        private bool withOrderedPrefetchField;
    
        private bool withOrderedPrefetchFieldSpecified;
    
        private bool withUnorderedPrefetchField;
    
        private bool withUnorderedPrefetchFieldSpecified;
    
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType PassThru {
            get {
                return this.passThruField;
            }
            set {
                this.passThruField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] OuterReferences {
            get {
                return this.outerReferencesField;
            }
            set {
                this.outerReferencesField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType ProbeColumn {
            get {
                return this.probeColumnField;
            }
            set {
                this.probeColumnField = value;
            }
        }
    
        /// <remarks/>
        public StarJoinInfoType StarJoinInfo {
            get {
                return this.starJoinInfoField;
            }
            set {
                this.starJoinInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Optimized {
            get {
                return this.optimizedField;
            }
            set {
                this.optimizedField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool WithOrderedPrefetch {
            get {
                return this.withOrderedPrefetchField;
            }
            set {
                this.withOrderedPrefetchField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool WithOrderedPrefetchSpecified {
            get {
                return this.withOrderedPrefetchFieldSpecified;
            }
            set {
                this.withOrderedPrefetchFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool WithUnorderedPrefetch {
            get {
                return this.withUnorderedPrefetchField;
            }
            set {
                this.withUnorderedPrefetchField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool WithUnorderedPrefetchSpecified {
            get {
                return this.withUnorderedPrefetchFieldSpecified;
            }
            set {
                this.withUnorderedPrefetchFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StarJoinInfoType {
    
        private bool rootField;
    
        private bool rootFieldSpecified;
    
        private StarJoinInfoTypeOperationType operationTypeField;
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Root {
            get {
                return this.rootField;
            }
            set {
                this.rootField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool RootSpecified {
            get {
                return this.rootFieldSpecified;
            }
            set {
                this.rootFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public StarJoinInfoTypeOperationType OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum StarJoinInfoTypeOperationType {
    
        /// <remarks/>
        Fetch,
    
        /// <remarks/>
        [XmlEnum("Index Intersection")]
        IndexIntersection,
    
        /// <remarks/>
        [XmlEnum("Index Filter")]
        IndexFilter,
    
        /// <remarks/>
        [XmlEnum("Index Lookup")]
        IndexLookup,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MergeType : RelOpBaseType {
    
        private ColumnReferenceType[] innerSideJoinColumnsField;
    
        private ColumnReferenceType[] outerSideJoinColumnsField;
    
        private ScalarExpressionType residualField;
    
        private ScalarExpressionType passThruField;
    
        private StarJoinInfoType starJoinInfoField;
    
        private RelOpType[] relOpField;
    
        private bool manyToManyField;
    
        private bool manyToManyFieldSpecified;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] InnerSideJoinColumns {
            get {
                return this.innerSideJoinColumnsField;
            }
            set {
                this.innerSideJoinColumnsField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] OuterSideJoinColumns {
            get {
                return this.outerSideJoinColumnsField;
            }
            set {
                this.outerSideJoinColumnsField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType Residual {
            get {
                return this.residualField;
            }
            set {
                this.residualField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType PassThru {
            get {
                return this.passThruField;
            }
            set {
                this.passThruField = value;
            }
        }
    
        /// <remarks/>
        public StarJoinInfoType StarJoinInfo {
            get {
                return this.starJoinInfoField;
            }
            set {
                this.starJoinInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ManyToMany {
            get {
                return this.manyToManyField;
            }
            set {
                this.manyToManyField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ManyToManySpecified {
            get {
                return this.manyToManyFieldSpecified;
            }
            set {
                this.manyToManyFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [XmlInclude(typeof(SwitchType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConcatType : RelOpBaseType {
    
        private RelOpType[] relOpField;
    
        /// <remarks/>
        [XmlElement("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SwitchType : ConcatType {
    
        private ScalarExpressionType predicateField;
    
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CollapseType : RelOpBaseType {
    
        private ColumnReferenceType[] groupByField;
    
        private RelOpType relOpField;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] GroupBy {
            get {
                return this.groupByField;
            }
            set {
                this.groupByField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class BitmapType : RelOpBaseType {
    
        private ColumnReferenceType[] hashKeysField;
    
        private RelOpType relOpField;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeys {
            get {
                return this.hashKeysField;
            }
            set {
                this.hashKeysField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [XmlInclude(typeof(TopSortType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SortType : RelOpBaseType {
    
        private OrderByTypeOrderByColumn[] orderByField;
    
        private SingleColumnReferenceType partitionIdField;
    
        private RelOpType relOpField;
    
        private bool distinctField;
    
        /// <remarks/>
        [XmlArrayItem("OrderByColumn", IsNullable=false)]
        public OrderByTypeOrderByColumn[] OrderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class OrderByTypeOrderByColumn {
    
        private ColumnReferenceType columnReferenceField;
    
        private bool ascendingField;
    
        /// <remarks/>
        public ColumnReferenceType ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Ascending {
            get {
                return this.ascendingField;
            }
            set {
                this.ascendingField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TopSortType : SortType {
    
        private int rowsField;
    
        /// <remarks/>
        [XmlAttribute()]
        public int Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StreamAggregateType : RelOpBaseType {
    
        private ColumnReferenceType[] groupByField;
    
        private RollupInfoType rollupInfoField;
    
        private RelOpType relOpField;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] GroupBy {
            get {
                return this.groupByField;
            }
            set {
                this.groupByField = value;
            }
        }
    
        /// <remarks/>
        public RollupInfoType RollupInfo {
            get {
                return this.rollupInfoField;
            }
            set {
                this.rollupInfoField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RollupInfoType {
    
        private RollupLevelType[] rollupLevelField;
    
        private int highestLevelField;
    
        /// <remarks/>
        [XmlElement("RollupLevel")]
        public RollupLevelType[] RollupLevel {
            get {
                return this.rollupLevelField;
            }
            set {
                this.rollupLevelField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int HighestLevel {
            get {
                return this.highestLevelField;
            }
            set {
                this.highestLevelField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RollupLevelType {
    
        private int levelField;
    
        /// <remarks/>
        [XmlAttribute()]
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ParallelismType : RelOpBaseType {
    
        private ColumnReferenceType[] partitionColumnsField;
    
        private OrderByTypeOrderByColumn[] orderByField;
    
        private ColumnReferenceType[] hashKeysField;
    
        private SingleColumnReferenceType probeColumnField;
    
        private ScalarExpressionType predicateField;
    
        private RelOpType relOpField;
    
        private PartitionType partitioningTypeField;
    
        private bool partitioningTypeFieldSpecified;
    
        private bool localParallelismField;
    
        private bool localParallelismFieldSpecified;
    
        private bool inRowField;
    
        private bool inRowFieldSpecified;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] PartitionColumns {
            get {
                return this.partitionColumnsField;
            }
            set {
                this.partitionColumnsField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("OrderByColumn", IsNullable=false)]
        public OrderByTypeOrderByColumn[] OrderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeys {
            get {
                return this.hashKeysField;
            }
            set {
                this.hashKeysField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType ProbeColumn {
            get {
                return this.probeColumnField;
            }
            set {
                this.probeColumnField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public PartitionType PartitioningType {
            get {
                return this.partitioningTypeField;
            }
            set {
                this.partitioningTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool PartitioningTypeSpecified {
            get {
                return this.partitioningTypeFieldSpecified;
            }
            set {
                this.partitioningTypeFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool LocalParallelism {
            get {
                return this.localParallelismField;
            }
            set {
                this.localParallelismField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool LocalParallelismSpecified {
            get {
                return this.localParallelismFieldSpecified;
            }
            set {
                this.localParallelismFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool InRow {
            get {
                return this.inRowField;
            }
            set {
                this.inRowField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool InRowSpecified {
            get {
                return this.inRowFieldSpecified;
            }
            set {
                this.inRowFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum PartitionType {
    
        /// <remarks/>
        Broadcast,
    
        /// <remarks/>
        Demand,
    
        /// <remarks/>
        Hash,
    
        /// <remarks/>
        NoPartitioning,
    
        /// <remarks/>
        Range,
    
        /// <remarks/>
        RoundRobin,
    
        /// <remarks/>
        CloneLocation,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ComputeScalarType : RelOpBaseType {
    
        private RelOpType relOpField;
    
        private bool computeSequenceField;
    
        private bool computeSequenceFieldSpecified;
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ComputeSequence {
            get {
                return this.computeSequenceField;
            }
            set {
                this.computeSequenceField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ComputeSequenceSpecified {
            get {
                return this.computeSequenceFieldSpecified;
            }
            set {
                this.computeSequenceFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class HashType : RelOpBaseType {
    
        private ColumnReferenceType[] hashKeysBuildField;
    
        private ColumnReferenceType[] hashKeysProbeField;
    
        private ScalarExpressionType buildResidualField;
    
        private ScalarExpressionType probeResidualField;
    
        private StarJoinInfoType starJoinInfoField;
    
        private RelOpType[] relOpField;
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeysBuild {
            get {
                return this.hashKeysBuildField;
            }
            set {
                this.hashKeysBuildField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeysProbe {
            get {
                return this.hashKeysProbeField;
            }
            set {
                this.hashKeysProbeField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType BuildResidual {
            get {
                return this.buildResidualField;
            }
            set {
                this.buildResidualField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType ProbeResidual {
            get {
                return this.probeResidualField;
            }
            set {
                this.probeResidualField = value;
            }
        }
    
        /// <remarks/>
        public StarJoinInfoType StarJoinInfo {
            get {
                return this.starJoinInfoField;
            }
            set {
                this.starJoinInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TableValuedFunctionType : RelOpBaseType {
    
        private ObjectType objectField;
    
        private ScalarExpressionType predicateField;
    
        private ScalarType[] parameterListField;
    
        /// <remarks/>
        public ObjectType Object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ScalarOperator", IsNullable=false)]
        public ScalarType[] ParameterList {
            get {
                return this.parameterListField;
            }
            set {
                this.parameterListField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ObjectType {
    
        private string serverField;
    
        private string databaseField;
    
        private string schemaField;
    
        private string tableField;
    
        private string indexField;
    
        private bool filteredField;
    
        private bool filteredFieldSpecified;
    
        private string aliasField;
    
        private int tableReferenceIdField;
    
        private bool tableReferenceIdFieldSpecified;
    
        private IndexKindType indexKindField;
    
        private bool indexKindFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Filtered {
            get {
                return this.filteredField;
            }
            set {
                this.filteredField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool FilteredSpecified {
            get {
                return this.filteredFieldSpecified;
            }
            set {
                this.filteredFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int TableReferenceId {
            get {
                return this.tableReferenceIdField;
            }
            set {
                this.tableReferenceIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool TableReferenceIdSpecified {
            get {
                return this.tableReferenceIdFieldSpecified;
            }
            set {
                this.tableReferenceIdFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public IndexKindType IndexKind {
            get {
                return this.indexKindField;
            }
            set {
                this.indexKindField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool IndexKindSpecified {
            get {
                return this.indexKindFieldSpecified;
            }
            set {
                this.indexKindFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum IndexKindType {
    
        /// <remarks/>
        Heap,
    
        /// <remarks/>
        Clustered,
    
        /// <remarks/>
        FTSChangeTracking,
    
        /// <remarks/>
        FTSMapping,
    
        /// <remarks/>
        NonClustered,
    
        /// <remarks/>
        PrimaryXML,
    
        /// <remarks/>
        SecondaryXML,
    
        /// <remarks/>
        Spatial,
    
        /// <remarks/>
        ViewClustered,
    
        /// <remarks/>
        ViewNonClustered,
    }

    /// <remarks/>
    [XmlInclude(typeof(ScalarInsertType))]
    [XmlInclude(typeof(CreateIndexType))]
    [XmlInclude(typeof(UpdateType))]
    [XmlInclude(typeof(SimpleUpdateType))]
    [XmlInclude(typeof(IndexScanType))]
    [XmlInclude(typeof(TableScanType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RowsetType : RelOpBaseType {
    
        private ObjectType[] objectField;
    
        /// <remarks/>
        [XmlElement("Object")]
        public ObjectType[] Object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarInsertType : RowsetType {
    
        private ScalarExpressionType setPredicateField;
    
        private bool dMLRequestSortField;
    
        private bool dMLRequestSortFieldSpecified;
    
        /// <remarks/>
        public ScalarExpressionType SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool DMLRequestSort {
            get {
                return this.dMLRequestSortField;
            }
            set {
                this.dMLRequestSortField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool DMLRequestSortSpecified {
            get {
                return this.dMLRequestSortFieldSpecified;
            }
            set {
                this.dMLRequestSortFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CreateIndexType : RowsetType {
    
        private RelOpType relOpField;
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UpdateType : RowsetType {
    
        private SetPredicateElementType[] setPredicateField;
    
        private SingleColumnReferenceType probeColumnField;
    
        private SingleColumnReferenceType actionColumnField;
    
        private SingleColumnReferenceType originalActionColumnField;
    
        private RelOpType relOpField;
    
        private bool withOrderedPrefetchField;
    
        private bool withOrderedPrefetchFieldSpecified;
    
        private bool withUnorderedPrefetchField;
    
        private bool withUnorderedPrefetchFieldSpecified;
    
        private bool dMLRequestSortField;
    
        private bool dMLRequestSortFieldSpecified;
    
        /// <remarks/>
        [XmlElement("SetPredicate")]
        public SetPredicateElementType[] SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType ProbeColumn {
            get {
                return this.probeColumnField;
            }
            set {
                this.probeColumnField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType ActionColumn {
            get {
                return this.actionColumnField;
            }
            set {
                this.actionColumnField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType OriginalActionColumn {
            get {
                return this.originalActionColumnField;
            }
            set {
                this.originalActionColumnField = value;
            }
        }
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool WithOrderedPrefetch {
            get {
                return this.withOrderedPrefetchField;
            }
            set {
                this.withOrderedPrefetchField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool WithOrderedPrefetchSpecified {
            get {
                return this.withOrderedPrefetchFieldSpecified;
            }
            set {
                this.withOrderedPrefetchFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool WithUnorderedPrefetch {
            get {
                return this.withUnorderedPrefetchField;
            }
            set {
                this.withUnorderedPrefetchField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool WithUnorderedPrefetchSpecified {
            get {
                return this.withUnorderedPrefetchFieldSpecified;
            }
            set {
                this.withUnorderedPrefetchFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool DMLRequestSort {
            get {
                return this.dMLRequestSortField;
            }
            set {
                this.dMLRequestSortField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool DMLRequestSortSpecified {
            get {
                return this.dMLRequestSortFieldSpecified;
            }
            set {
                this.dMLRequestSortFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SimpleUpdateType : RowsetType {
    
        private object itemField;
    
        private ScalarExpressionType setPredicateField;
    
        private bool dMLRequestSortField;
    
        private bool dMLRequestSortFieldSpecified;
    
        /// <remarks/>
        [XmlElement("SeekPredicate", typeof(SeekPredicateType))]
        [XmlElement("SeekPredicateNew", typeof(SeekPredicateNewType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool DMLRequestSort {
            get {
                return this.dMLRequestSortField;
            }
            set {
                this.dMLRequestSortField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool DMLRequestSortSpecified {
            get {
                return this.dMLRequestSortFieldSpecified;
            }
            set {
                this.dMLRequestSortFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class IndexScanType : RowsetType {
    
        private SeekPredicatesType seekPredicatesField;
    
        private ScalarExpressionType predicateField;
    
        private SingleColumnReferenceType partitionIdField;
    
        private ObjectType[] indexedViewInfoField;
    
        private bool lookupField;
    
        private bool lookupFieldSpecified;
    
        private bool orderedField;
    
        private OrderType scanDirectionField;
    
        private bool scanDirectionFieldSpecified;
    
        private bool forcedIndexField;
    
        private bool forcedIndexFieldSpecified;
    
        private bool forceSeekField;
    
        private bool forceSeekFieldSpecified;
    
        private int forceSeekColumnCountField;
    
        private bool forceSeekColumnCountFieldSpecified;
    
        private bool forceScanField;
    
        private bool forceScanFieldSpecified;
    
        private bool noExpandHintField;
    
        private bool noExpandHintFieldSpecified;
    
        private StorageType storageField;
    
        private bool storageFieldSpecified;
    
        /// <remarks/>
        public SeekPredicatesType SeekPredicates {
            get {
                return this.seekPredicatesField;
            }
            set {
                this.seekPredicatesField = value;
            }
        }
    
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("Object", IsNullable=false)]
        public ObjectType[] IndexedViewInfo {
            get {
                return this.indexedViewInfoField;
            }
            set {
                this.indexedViewInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Lookup {
            get {
                return this.lookupField;
            }
            set {
                this.lookupField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool LookupSpecified {
            get {
                return this.lookupFieldSpecified;
            }
            set {
                this.lookupFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public OrderType ScanDirection {
            get {
                return this.scanDirectionField;
            }
            set {
                this.scanDirectionField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ScanDirectionSpecified {
            get {
                return this.scanDirectionFieldSpecified;
            }
            set {
                this.scanDirectionFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ForcedIndex {
            get {
                return this.forcedIndexField;
            }
            set {
                this.forcedIndexField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ForcedIndexSpecified {
            get {
                return this.forcedIndexFieldSpecified;
            }
            set {
                this.forcedIndexFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ForceSeek {
            get {
                return this.forceSeekField;
            }
            set {
                this.forceSeekField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ForceSeekSpecified {
            get {
                return this.forceSeekFieldSpecified;
            }
            set {
                this.forceSeekFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int ForceSeekColumnCount {
            get {
                return this.forceSeekColumnCountField;
            }
            set {
                this.forceSeekColumnCountField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ForceSeekColumnCountSpecified {
            get {
                return this.forceSeekColumnCountFieldSpecified;
            }
            set {
                this.forceSeekColumnCountFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ForceScan {
            get {
                return this.forceScanField;
            }
            set {
                this.forceScanField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ForceScanSpecified {
            get {
                return this.forceScanFieldSpecified;
            }
            set {
                this.forceScanFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool NoExpandHint {
            get {
                return this.noExpandHintField;
            }
            set {
                this.noExpandHintField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool NoExpandHintSpecified {
            get {
                return this.noExpandHintFieldSpecified;
            }
            set {
                this.noExpandHintFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public StorageType Storage {
            get {
                return this.storageField;
            }
            set {
                this.storageField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool StorageSpecified {
            get {
                return this.storageFieldSpecified;
            }
            set {
                this.storageFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum OrderType {
    
        /// <remarks/>
        BACKWARD,
    
        /// <remarks/>
        FORWARD,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum StorageType {
    
        /// <remarks/>
        RowStore,
    
        /// <remarks/>
        ColumnStore,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TableScanType : RowsetType {
    
        private ScalarExpressionType predicateField;
    
        private SingleColumnReferenceType partitionIdField;
    
        private ObjectType[] indexedViewInfoField;
    
        private bool orderedField;
    
        private bool forcedIndexField;
    
        private bool forcedIndexFieldSpecified;
    
        private bool forceScanField;
    
        private bool forceScanFieldSpecified;
    
        private bool noExpandHintField;
    
        private bool noExpandHintFieldSpecified;
    
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
    
        /// <remarks/>
        public SingleColumnReferenceType PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("Object", IsNullable=false)]
        public ObjectType[] IndexedViewInfo {
            get {
                return this.indexedViewInfoField;
            }
            set {
                this.indexedViewInfoField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ForcedIndex {
            get {
                return this.forcedIndexField;
            }
            set {
                this.forcedIndexField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ForcedIndexSpecified {
            get {
                return this.forcedIndexFieldSpecified;
            }
            set {
                this.forcedIndexFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ForceScan {
            get {
                return this.forceScanField;
            }
            set {
                this.forceScanField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ForceScanSpecified {
            get {
                return this.forceScanFieldSpecified;
            }
            set {
                this.forceScanFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool NoExpandHint {
            get {
                return this.noExpandHintField;
            }
            set {
                this.noExpandHintField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool NoExpandHintSpecified {
            get {
                return this.noExpandHintFieldSpecified;
            }
            set {
                this.noExpandHintFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConstantScanType : RelOpBaseType {
    
        private ScalarType[][] valuesField;
    
        /// <remarks/>
        [XmlArrayItem("Row", IsNullable=false)]
        [XmlArrayItem("ScalarOperator", IsNullable=false, NestingLevel=1)]
        public ScalarType[][] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SimpleIteratorOneChildType : RelOpBaseType {
    
        private RelOpType relOpField;
    
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", IncludeInSchema=false)]
    public enum ItemChoiceType {
    
        /// <remarks/>
        Assert,
    
        /// <remarks/>
        BatchHashTableBuild,
    
        /// <remarks/>
        Bitmap,
    
        /// <remarks/>
        Collapse,
    
        /// <remarks/>
        ComputeScalar,
    
        /// <remarks/>
        Concat,
    
        /// <remarks/>
        ConstantScan,
    
        /// <remarks/>
        CreateIndex,
    
        /// <remarks/>
        DeletedScan,
    
        /// <remarks/>
        Extension,
    
        /// <remarks/>
        Filter,
    
        /// <remarks/>
        Generic,
    
        /// <remarks/>
        Hash,
    
        /// <remarks/>
        IndexScan,
    
        /// <remarks/>
        InsertedScan,
    
        /// <remarks/>
        LogRowScan,
    
        /// <remarks/>
        Merge,
    
        /// <remarks/>
        MergeInterval,
    
        /// <remarks/>
        NestedLoops,
    
        /// <remarks/>
        OnlineIndex,
    
        /// <remarks/>
        Parallelism,
    
        /// <remarks/>
        ParameterTableScan,
    
        /// <remarks/>
        PrintDataflow,
    
        /// <remarks/>
        RemoteFetch,
    
        /// <remarks/>
        RemoteModify,
    
        /// <remarks/>
        RemoteQuery,
    
        /// <remarks/>
        RemoteRange,
    
        /// <remarks/>
        RemoteScan,
    
        /// <remarks/>
        RowCountSpool,
    
        /// <remarks/>
        ScalarInsert,
    
        /// <remarks/>
        Segment,
    
        /// <remarks/>
        Sequence,
    
        /// <remarks/>
        SequenceProject,
    
        /// <remarks/>
        SimpleUpdate,
    
        /// <remarks/>
        Sort,
    
        /// <remarks/>
        Split,
    
        /// <remarks/>
        Spool,
    
        /// <remarks/>
        StreamAggregate,
    
        /// <remarks/>
        Switch,
    
        /// <remarks/>
        TableScan,
    
        /// <remarks/>
        TableValuedFunction,
    
        /// <remarks/>
        Top,
    
        /// <remarks/>
        TopSort,
    
        /// <remarks/>
        Update,
    
        /// <remarks/>
        WindowSpool,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum LogicalOpType {
    
        /// <remarks/>
        Aggregate,
    
        /// <remarks/>
        Assert,
    
        /// <remarks/>
        [XmlEnum("Async Concat")]
        AsyncConcat,
    
        /// <remarks/>
        [XmlEnum("Batch Hash Table Build")]
        BatchHashTableBuild,
    
        /// <remarks/>
        [XmlEnum("Bitmap Create")]
        BitmapCreate,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Scan")]
        ClusteredIndexScan,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Seek")]
        ClusteredIndexSeek,
    
        /// <remarks/>
        [XmlEnum("Clustered Update")]
        ClusteredUpdate,
    
        /// <remarks/>
        Collapse,
    
        /// <remarks/>
        [XmlEnum("Compute Scalar")]
        ComputeScalar,
    
        /// <remarks/>
        Concatenation,
    
        /// <remarks/>
        [XmlEnum("Constant Scan")]
        ConstantScan,
    
        /// <remarks/>
        [XmlEnum("Cross Join")]
        CrossJoin,
    
        /// <remarks/>
        Delete,
    
        /// <remarks/>
        [XmlEnum("Deleted Scan")]
        DeletedScan,
    
        /// <remarks/>
        [XmlEnum("Distinct Sort")]
        DistinctSort,
    
        /// <remarks/>
        Distinct,
    
        /// <remarks/>
        [XmlEnum("Distribute Streams")]
        DistributeStreams,
    
        /// <remarks/>
        [XmlEnum("Eager Spool")]
        EagerSpool,
    
        /// <remarks/>
        Filter,
    
        /// <remarks/>
        [XmlEnum("Flow Distinct")]
        FlowDistinct,
    
        /// <remarks/>
        [XmlEnum("Full Outer Join")]
        FullOuterJoin,
    
        /// <remarks/>
        [XmlEnum("Gather Streams")]
        GatherStreams,
    
        /// <remarks/>
        Generic,
    
        /// <remarks/>
        [XmlEnum("Index Scan")]
        IndexScan,
    
        /// <remarks/>
        [XmlEnum("Index Seek")]
        IndexSeek,
    
        /// <remarks/>
        [XmlEnum("Inner Join")]
        InnerJoin,
    
        /// <remarks/>
        Insert,
    
        /// <remarks/>
        [XmlEnum("Inserted Scan")]
        InsertedScan,
    
        /// <remarks/>
        [XmlEnum("Lazy Spool")]
        LazySpool,
    
        /// <remarks/>
        [XmlEnum("Left Anti Semi Join")]
        LeftAntiSemiJoin,
    
        /// <remarks/>
        [XmlEnum("Left Outer Join")]
        LeftOuterJoin,
    
        /// <remarks/>
        [XmlEnum("Left Semi Join")]
        LeftSemiJoin,
    
        /// <remarks/>
        [XmlEnum("Log Row Scan")]
        LogRowScan,
    
        /// <remarks/>
        [XmlEnum("Merge Interval")]
        MergeInterval,
    
        /// <remarks/>
        [XmlEnum("Parameter Table Scan")]
        ParameterTableScan,
    
        /// <remarks/>
        [XmlEnum("Partial Aggregate")]
        PartialAggregate,
    
        /// <remarks/>
        Print,
    
        /// <remarks/>
        [XmlEnum("Remote Delete")]
        RemoteDelete,
    
        /// <remarks/>
        [XmlEnum("Remote Index Scan")]
        RemoteIndexScan,
    
        /// <remarks/>
        [XmlEnum("Remote Index Seek")]
        RemoteIndexSeek,
    
        /// <remarks/>
        [XmlEnum("Remote Insert")]
        RemoteInsert,
    
        /// <remarks/>
        [XmlEnum("Remote Query")]
        RemoteQuery,
    
        /// <remarks/>
        [XmlEnum("Remote Scan")]
        RemoteScan,
    
        /// <remarks/>
        [XmlEnum("Remote Update")]
        RemoteUpdate,
    
        /// <remarks/>
        [XmlEnum("Repartition Streams")]
        RepartitionStreams,
    
        /// <remarks/>
        [XmlEnum("RID Lookup")]
        RIDLookup,
    
        /// <remarks/>
        [XmlEnum("Right Anti Semi Join")]
        RightAntiSemiJoin,
    
        /// <remarks/>
        [XmlEnum("Right Outer Join")]
        RightOuterJoin,
    
        /// <remarks/>
        [XmlEnum("Right Semi Join")]
        RightSemiJoin,
    
        /// <remarks/>
        Segment,
    
        /// <remarks/>
        Sequence,
    
        /// <remarks/>
        Sort,
    
        /// <remarks/>
        Split,
    
        /// <remarks/>
        Switch,
    
        /// <remarks/>
        [XmlEnum("Table-valued function")]
        Tablevaluedfunction,
    
        /// <remarks/>
        [XmlEnum("Table Scan")]
        TableScan,
    
        /// <remarks/>
        Top,
    
        /// <remarks/>
        [XmlEnum("TopN Sort")]
        TopNSort,
    
        /// <remarks/>
        UDX,
    
        /// <remarks/>
        Union,
    
        /// <remarks/>
        Update,
    
        /// <remarks/>
        Merge,
    
        /// <remarks/>
        [XmlEnum("Merge Stats")]
        MergeStats,
    
        /// <remarks/>
        [XmlEnum("Local Stats")]
        LocalStats,
    
        /// <remarks/>
        [XmlEnum("Window Spool")]
        WindowSpool,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum PhysicalOpType {
    
        /// <remarks/>
        Assert,
    
        /// <remarks/>
        [XmlEnum("Batch Hash Table Build")]
        BatchHashTableBuild,
    
        /// <remarks/>
        Bitmap,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Delete")]
        ClusteredIndexDelete,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Insert")]
        ClusteredIndexInsert,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Scan")]
        ClusteredIndexScan,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Seek")]
        ClusteredIndexSeek,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Update")]
        ClusteredIndexUpdate,
    
        /// <remarks/>
        [XmlEnum("Clustered Index Merge")]
        ClusteredIndexMerge,
    
        /// <remarks/>
        [XmlEnum("Clustered Update")]
        ClusteredUpdate,
    
        /// <remarks/>
        Collapse,
    
        /// <remarks/>
        [XmlEnum("Compute Scalar")]
        ComputeScalar,
    
        /// <remarks/>
        Concatenation,
    
        /// <remarks/>
        [XmlEnum("Constant Scan")]
        ConstantScan,
    
        /// <remarks/>
        [XmlEnum("Deleted Scan")]
        DeletedScan,
    
        /// <remarks/>
        Filter,
    
        /// <remarks/>
        Generic,
    
        /// <remarks/>
        [XmlEnum("Hash Match")]
        HashMatch,
    
        /// <remarks/>
        [XmlEnum("Index Delete")]
        IndexDelete,
    
        /// <remarks/>
        [XmlEnum("Index Insert")]
        IndexInsert,
    
        /// <remarks/>
        [XmlEnum("Index Scan")]
        IndexScan,
    
        /// <remarks/>
        [XmlEnum("Index Seek")]
        IndexSeek,
    
        /// <remarks/>
        [XmlEnum("Index Spool")]
        IndexSpool,
    
        /// <remarks/>
        [XmlEnum("Index Update")]
        IndexUpdate,
    
        /// <remarks/>
        [XmlEnum("Inserted Scan")]
        InsertedScan,
    
        /// <remarks/>
        [XmlEnum("Log Row Scan")]
        LogRowScan,
    
        /// <remarks/>
        [XmlEnum("Merge Interval")]
        MergeInterval,
    
        /// <remarks/>
        [XmlEnum("Merge Join")]
        MergeJoin,
    
        /// <remarks/>
        [XmlEnum("Nested Loops")]
        NestedLoops,
    
        /// <remarks/>
        [XmlEnum("Online Index Insert")]
        OnlineIndexInsert,
    
        /// <remarks/>
        Parallelism,
    
        /// <remarks/>
        [XmlEnum("Parameter Table Scan")]
        ParameterTableScan,
    
        /// <remarks/>
        Print,
    
        /// <remarks/>
        [XmlEnum("Remote Delete")]
        RemoteDelete,
    
        /// <remarks/>
        [XmlEnum("Remote Index Scan")]
        RemoteIndexScan,
    
        /// <remarks/>
        [XmlEnum("Remote Index Seek")]
        RemoteIndexSeek,
    
        /// <remarks/>
        [XmlEnum("Remote Insert")]
        RemoteInsert,
    
        /// <remarks/>
        [XmlEnum("Remote Query")]
        RemoteQuery,
    
        /// <remarks/>
        [XmlEnum("Remote Scan")]
        RemoteScan,
    
        /// <remarks/>
        [XmlEnum("Remote Update")]
        RemoteUpdate,
    
        /// <remarks/>
        [XmlEnum("RID Lookup")]
        RIDLookup,
    
        /// <remarks/>
        [XmlEnum("Row Count Spool")]
        RowCountSpool,
    
        /// <remarks/>
        Segment,
    
        /// <remarks/>
        Sequence,
    
        /// <remarks/>
        [XmlEnum("Sequence Project")]
        SequenceProject,
    
        /// <remarks/>
        Sort,
    
        /// <remarks/>
        Split,
    
        /// <remarks/>
        [XmlEnum("Stream Aggregate")]
        StreamAggregate,
    
        /// <remarks/>
        Switch,
    
        /// <remarks/>
        [XmlEnum("Table-valued function")]
        Tablevaluedfunction,
    
        /// <remarks/>
        [XmlEnum("Table Delete")]
        TableDelete,
    
        /// <remarks/>
        [XmlEnum("Table Insert")]
        TableInsert,
    
        /// <remarks/>
        [XmlEnum("Table Scan")]
        TableScan,
    
        /// <remarks/>
        [XmlEnum("Table Spool")]
        TableSpool,
    
        /// <remarks/>
        [XmlEnum("Table Update")]
        TableUpdate,
    
        /// <remarks/>
        [XmlEnum("Table Merge")]
        TableMerge,
    
        /// <remarks/>
        Top,
    
        /// <remarks/>
        UDX,
    
        /// <remarks/>
        [XmlEnum("Window Spool")]
        WindowSpool,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum SubqueryOperationType {
    
        /// <remarks/>
        [XmlEnum("EQ ALL")]
        EQALL,
    
        /// <remarks/>
        [XmlEnum("EQ ANY")]
        EQANY,
    
        /// <remarks/>
        EXISTS,
    
        /// <remarks/>
        [XmlEnum("GE ALL")]
        GEALL,
    
        /// <remarks/>
        [XmlEnum("GE ANY")]
        GEANY,
    
        /// <remarks/>
        [XmlEnum("GT ALL")]
        GTALL,
    
        /// <remarks/>
        [XmlEnum("GT ANY")]
        GTANY,
    
        /// <remarks/>
        IN,
    
        /// <remarks/>
        [XmlEnum("LE ALL")]
        LEALL,
    
        /// <remarks/>
        [XmlEnum("LE ANY")]
        LEANY,
    
        /// <remarks/>
        [XmlEnum("LT ALL")]
        LTALL,
    
        /// <remarks/>
        [XmlEnum("LT ANY")]
        LTANY,
    
        /// <remarks/>
        [XmlEnum("NE ALL")]
        NEALL,
    
        /// <remarks/>
        [XmlEnum("NE ANY")]
        NEANY,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDTMethodType {
    
        private CLRFunctionType cLRFunctionField;
    
        private ScalarType[] scalarOperatorField;
    
        /// <remarks/>
        public CLRFunctionType CLRFunction {
            get {
                return this.cLRFunctionField;
            }
            set {
                this.cLRFunctionField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CLRFunctionType {
    
        private string assemblyField;
    
        private string classField;
    
        private string methodField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string Assembly {
            get {
                return this.assemblyField;
            }
            set {
                this.assemblyField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDAggregateType {
    
        private ObjectType uDAggObjectField;
    
        private ScalarType scalarOperatorField;
    
        private bool distinctField;
    
        /// <remarks/>
        public ObjectType UDAggObject {
            get {
                return this.uDAggObjectField;
            }
            set {
                this.uDAggObjectField = value;
            }
        }
    
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool Distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDFType {
    
        private ScalarType[] scalarOperatorField;
    
        private CLRFunctionType cLRFunctionField;
    
        private string functionNameField;
    
        private bool isClrFunctionField;
    
        private bool isClrFunctionFieldSpecified;
    
        /// <remarks/>
        [XmlElement("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    
        /// <remarks/>
        public CLRFunctionType CLRFunction {
            get {
                return this.cLRFunctionField;
            }
            set {
                this.cLRFunctionField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool IsClrFunction {
            get {
                return this.isClrFunctionField;
            }
            set {
                this.isClrFunctionField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool IsClrFunctionSpecified {
            get {
                return this.isClrFunctionFieldSpecified;
            }
            set {
                this.isClrFunctionFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UnmatchedIndexesType {
    
        private ObjectType[] parameterizationField;
    
        /// <remarks/>
        [XmlArrayItem("Object", IsNullable=false)]
        public ObjectType[] Parameterization {
            get {
                return this.parameterizationField;
            }
            set {
                this.parameterizationField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class GuessedSelectivityType {
    
        private ObjectType spatialField;
    
        /// <remarks/>
        public ObjectType Spatial {
            get {
                return this.spatialField;
            }
            set {
                this.spatialField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ColumnType {
    
        private string nameField;
    
        private int columnIdField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int ColumnId {
            get {
                return this.columnIdField;
            }
            set {
                this.columnIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ColumnGroupType {
    
        private ColumnType[] columnField;
    
        private ColumnGroupTypeUsage usageField;
    
        /// <remarks/>
        [XmlElement("Column")]
        public ColumnType[] Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ColumnGroupTypeUsage Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ColumnGroupTypeUsage {
    
        /// <remarks/>
        EQUALITY,
    
        /// <remarks/>
        INEQUALITY,
    
        /// <remarks/>
        INCLUDE,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MissingIndexType {
    
        private ColumnGroupType[] columnGroupField;
    
        private string databaseField;
    
        private string schemaField;
    
        private string tableField;
    
        /// <remarks/>
        [XmlElement("ColumnGroup")]
        public ColumnGroupType[] ColumnGroup {
            get {
                return this.columnGroupField;
            }
            set {
                this.columnGroupField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MissingIndexGroupType {
    
        private MissingIndexType[] missingIndexField;
    
        private double impactField;
    
        /// <remarks/>
        [XmlElement("MissingIndex")]
        public MissingIndexType[] MissingIndex {
            get {
                return this.missingIndexField;
            }
            set {
                this.missingIndexField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double Impact {
            get {
                return this.impactField;
            }
            set {
                this.impactField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ThreadReservationType {
    
        private int nodeIdField;
    
        private int reservedThreadsField;
    
        /// <remarks/>
        [XmlAttribute()]
        public int NodeId {
            get {
                return this.nodeIdField;
            }
            set {
                this.nodeIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int ReservedThreads {
            get {
                return this.reservedThreadsField;
            }
            set {
                this.reservedThreadsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ThreadStatType {
    
        private ThreadReservationType[] threadReservationField;
    
        private int branchesField;
    
        private int usedThreadsField;
    
        private bool usedThreadsFieldSpecified;
    
        /// <remarks/>
        [XmlElement("ThreadReservation")]
        public ThreadReservationType[] ThreadReservation {
            get {
                return this.threadReservationField;
            }
            set {
                this.threadReservationField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int Branches {
            get {
                return this.branchesField;
            }
            set {
                this.branchesField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int UsedThreads {
            get {
                return this.usedThreadsField;
            }
            set {
                this.usedThreadsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool UsedThreadsSpecified {
            get {
                return this.usedThreadsFieldSpecified;
            }
            set {
                this.usedThreadsFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SetOptionsType {
    
        private bool aNSI_NULLSField;
    
        private bool aNSI_NULLSFieldSpecified;
    
        private bool aNSI_PADDINGField;
    
        private bool aNSI_PADDINGFieldSpecified;
    
        private bool aNSI_WARNINGSField;
    
        private bool aNSI_WARNINGSFieldSpecified;
    
        private bool aRITHABORTField;
    
        private bool aRITHABORTFieldSpecified;
    
        private bool cONCAT_NULL_YIELDS_NULLField;
    
        private bool cONCAT_NULL_YIELDS_NULLFieldSpecified;
    
        private bool nUMERIC_ROUNDABORTField;
    
        private bool nUMERIC_ROUNDABORTFieldSpecified;
    
        private bool qUOTED_IDENTIFIERField;
    
        private bool qUOTED_IDENTIFIERFieldSpecified;
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ANSI_NULLS {
            get {
                return this.aNSI_NULLSField;
            }
            set {
                this.aNSI_NULLSField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ANSI_NULLSSpecified {
            get {
                return this.aNSI_NULLSFieldSpecified;
            }
            set {
                this.aNSI_NULLSFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ANSI_PADDING {
            get {
                return this.aNSI_PADDINGField;
            }
            set {
                this.aNSI_PADDINGField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ANSI_PADDINGSpecified {
            get {
                return this.aNSI_PADDINGFieldSpecified;
            }
            set {
                this.aNSI_PADDINGFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ANSI_WARNINGS {
            get {
                return this.aNSI_WARNINGSField;
            }
            set {
                this.aNSI_WARNINGSField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ANSI_WARNINGSSpecified {
            get {
                return this.aNSI_WARNINGSFieldSpecified;
            }
            set {
                this.aNSI_WARNINGSFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool ARITHABORT {
            get {
                return this.aRITHABORTField;
            }
            set {
                this.aRITHABORTField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ARITHABORTSpecified {
            get {
                return this.aRITHABORTFieldSpecified;
            }
            set {
                this.aRITHABORTFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool CONCAT_NULL_YIELDS_NULL {
            get {
                return this.cONCAT_NULL_YIELDS_NULLField;
            }
            set {
                this.cONCAT_NULL_YIELDS_NULLField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool CONCAT_NULL_YIELDS_NULLSpecified {
            get {
                return this.cONCAT_NULL_YIELDS_NULLFieldSpecified;
            }
            set {
                this.cONCAT_NULL_YIELDS_NULLFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool NUMERIC_ROUNDABORT {
            get {
                return this.nUMERIC_ROUNDABORTField;
            }
            set {
                this.nUMERIC_ROUNDABORTField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool NUMERIC_ROUNDABORTSpecified {
            get {
                return this.nUMERIC_ROUNDABORTFieldSpecified;
            }
            set {
                this.nUMERIC_ROUNDABORTFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public bool QUOTED_IDENTIFIER {
            get {
                return this.qUOTED_IDENTIFIERField;
            }
            set {
                this.qUOTED_IDENTIFIERField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool QUOTED_IDENTIFIERSpecified {
            get {
                return this.qUOTED_IDENTIFIERFieldSpecified;
            }
            set {
                this.qUOTED_IDENTIFIERFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [XmlInclude(typeof(StmtReceiveType))]
    [XmlInclude(typeof(StmtCursorType))]
    [XmlInclude(typeof(StmtCondType))]
    [XmlInclude(typeof(StmtUseDbType))]
    [XmlInclude(typeof(StmtSimpleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class BaseStmtInfoType {
    
        private SetOptionsType statementSetOptionsField;
    
        private int statementCompIdField;
    
        private bool statementCompIdFieldSpecified;
    
        private double statementEstRowsField;
    
        private bool statementEstRowsFieldSpecified;
    
        private int statementIdField;
    
        private bool statementIdFieldSpecified;
    
        private string statementOptmLevelField;
    
        private BaseStmtInfoTypeStatementOptmEarlyAbortReason statementOptmEarlyAbortReasonField;
    
        private bool statementOptmEarlyAbortReasonFieldSpecified;
    
        private double statementSubTreeCostField;
    
        private bool statementSubTreeCostFieldSpecified;
    
        private string statementTextField;
    
        private string statementTypeField;
    
        private string templatePlanGuideDBField;
    
        private string templatePlanGuideNameField;
    
        private string planGuideDBField;
    
        private string planGuideNameField;
    
        private string parameterizedTextField;
    
        private string parameterizedPlanHandleField;
    
        private string queryHashField;
    
        private string queryPlanHashField;
    
        private string retrievedFromCacheField;
    
        /// <remarks/>
        public SetOptionsType StatementSetOptions {
            get {
                return this.statementSetOptionsField;
            }
            set {
                this.statementSetOptionsField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int StatementCompId {
            get {
                return this.statementCompIdField;
            }
            set {
                this.statementCompIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool StatementCompIdSpecified {
            get {
                return this.statementCompIdFieldSpecified;
            }
            set {
                this.statementCompIdFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double StatementEstRows {
            get {
                return this.statementEstRowsField;
            }
            set {
                this.statementEstRowsField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool StatementEstRowsSpecified {
            get {
                return this.statementEstRowsFieldSpecified;
            }
            set {
                this.statementEstRowsFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public int StatementId {
            get {
                return this.statementIdField;
            }
            set {
                this.statementIdField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool StatementIdSpecified {
            get {
                return this.statementIdFieldSpecified;
            }
            set {
                this.statementIdFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string StatementOptmLevel {
            get {
                return this.statementOptmLevelField;
            }
            set {
                this.statementOptmLevelField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public BaseStmtInfoTypeStatementOptmEarlyAbortReason StatementOptmEarlyAbortReason {
            get {
                return this.statementOptmEarlyAbortReasonField;
            }
            set {
                this.statementOptmEarlyAbortReasonField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool StatementOptmEarlyAbortReasonSpecified {
            get {
                return this.statementOptmEarlyAbortReasonFieldSpecified;
            }
            set {
                this.statementOptmEarlyAbortReasonFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public double StatementSubTreeCost {
            get {
                return this.statementSubTreeCostField;
            }
            set {
                this.statementSubTreeCostField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool StatementSubTreeCostSpecified {
            get {
                return this.statementSubTreeCostFieldSpecified;
            }
            set {
                this.statementSubTreeCostFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string StatementText {
            get {
                return this.statementTextField;
            }
            set {
                this.statementTextField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string StatementType {
            get {
                return this.statementTypeField;
            }
            set {
                this.statementTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string TemplatePlanGuideDB {
            get {
                return this.templatePlanGuideDBField;
            }
            set {
                this.templatePlanGuideDBField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string TemplatePlanGuideName {
            get {
                return this.templatePlanGuideNameField;
            }
            set {
                this.templatePlanGuideNameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string PlanGuideDB {
            get {
                return this.planGuideDBField;
            }
            set {
                this.planGuideDBField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string PlanGuideName {
            get {
                return this.planGuideNameField;
            }
            set {
                this.planGuideNameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string ParameterizedText {
            get {
                return this.parameterizedTextField;
            }
            set {
                this.parameterizedTextField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string ParameterizedPlanHandle {
            get {
                return this.parameterizedPlanHandleField;
            }
            set {
                this.parameterizedPlanHandleField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string QueryHash {
            get {
                return this.queryHashField;
            }
            set {
                this.queryHashField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string QueryPlanHash {
            get {
                return this.queryPlanHashField;
            }
            set {
                this.queryPlanHashField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string RetrievedFromCache {
            get {
                return this.retrievedFromCacheField;
            }
            set {
                this.retrievedFromCacheField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum BaseStmtInfoTypeStatementOptmEarlyAbortReason {
    
        /// <remarks/>
        TimeOut,
    
        /// <remarks/>
        MemoryLimitExceeded,
    
        /// <remarks/>
        GoodEnoughPlanFound,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtReceiveType : BaseStmtInfoType {
    
        private ReceivePlanTypeOperation[] receivePlanField;
    
        /// <remarks/>
        [XmlArrayItem("Operation", IsNullable=false)]
        public ReceivePlanTypeOperation[] ReceivePlan {
            get {
                return this.receivePlanField;
            }
            set {
                this.receivePlanField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ReceivePlanTypeOperation {
    
        private QueryPlanType queryPlanField;
    
        private ReceivePlanTypeOperationOperationType operationTypeField;
    
        private bool operationTypeFieldSpecified;
    
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public ReceivePlanTypeOperationOperationType OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool OperationTypeSpecified {
            get {
                return this.operationTypeFieldSpecified;
            }
            set {
                this.operationTypeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ReceivePlanTypeOperationOperationType {
    
        /// <remarks/>
        ReceivePlanSelect,
    
        /// <remarks/>
        ReceivePlanUpdate,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCursorType : BaseStmtInfoType {
    
        private CursorPlanType cursorPlanField;
    
        /// <remarks/>
        public CursorPlanType CursorPlan {
            get {
                return this.cursorPlanField;
            }
            set {
                this.cursorPlanField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtUseDbType : BaseStmtInfoType {
    
        private string databaseField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtSimpleType : BaseStmtInfoType {
    
        private QueryPlanType queryPlanField;
    
        private FunctionType[] uDFField;
    
        private FunctionType storedProcField;
    
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("UDF")]
        public FunctionType[] UDF {
            get {
                return this.uDFField;
            }
            set {
                this.uDFField = value;
            }
        }
    
        /// <remarks/>
        public FunctionType StoredProc {
            get {
                return this.storedProcField;
            }
            set {
                this.storedProcField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondTypeThen {
    
        private StmtBlockType statementsField;
    
        /// <remarks/>
        public StmtBlockType Statements {
            get {
                return this.statementsField;
            }
            set {
                this.statementsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondTypeElse {
    
        private StmtBlockType statementsField;
    
        /// <remarks/>
        public StmtBlockType Statements {
            get {
                return this.statementsField;
            }
            set {
                this.statementsField = value;
            }
        }
    }
}